<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lms.dao.TeacherMapper">
  <resultMap id="BaseResultMap" type="com.lms.po.Teacher">
    <constructor>
      <idArg column="teacher_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="department_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="teacher_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="teacher_no" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="teacher_password" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="teacher_sex" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="teacher_status" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="role_id" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    teacher_id, department_id, teacher_name, teacher_no, teacher_password, teacher_sex, 
    teacher_status, role_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from teacher
    where teacher_id = #{teacherId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from teacher
    where teacher_id = #{teacherId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lms.po.Teacher">
    insert into teacher (teacher_id, department_id, teacher_name, 
      teacher_no, teacher_password, teacher_sex, 
      teacher_status, role_id)
    values (#{teacherId,jdbcType=INTEGER}, #{departmentId,jdbcType=INTEGER}, #{teacherName,jdbcType=VARCHAR}, 
      #{teacherNo,jdbcType=VARCHAR}, #{teacherPassword,jdbcType=VARCHAR}, #{teacherSex,jdbcType=VARCHAR}, 
      #{teacherStatus,jdbcType=VARCHAR}, #{roleId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.lms.po.Teacher">
    insert into teacher
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="teacherId != null">
        teacher_id,
      </if>
      <if test="departmentId != null">
        department_id,
      </if>
      <if test="teacherName != null">
        teacher_name,
      </if>
      <if test="teacherNo != null">
        teacher_no,
      </if>
      <if test="teacherPassword != null">
        teacher_password,
      </if>
      <if test="teacherSex != null">
        teacher_sex,
      </if>
      <if test="teacherStatus != null">
        teacher_status,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="teacherId != null">
        #{teacherId,jdbcType=INTEGER},
      </if>
      <if test="departmentId != null">
        #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="teacherName != null">
        #{teacherName,jdbcType=VARCHAR},
      </if>
      <if test="teacherNo != null">
        #{teacherNo,jdbcType=VARCHAR},
      </if>
      <if test="teacherPassword != null">
        #{teacherPassword,jdbcType=VARCHAR},
      </if>
      <if test="teacherSex != null">
        #{teacherSex,jdbcType=VARCHAR},
      </if>
      <if test="teacherStatus != null">
        #{teacherStatus,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lms.po.Teacher">
    update teacher
    <set>
      <if test="departmentId != null">
        department_id = #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="teacherName != null">
        teacher_name = #{teacherName,jdbcType=VARCHAR},
      </if>
      <if test="teacherNo != null">
        teacher_no = #{teacherNo,jdbcType=VARCHAR},
      </if>
      <if test="teacherPassword != null">
        teacher_password = #{teacherPassword,jdbcType=VARCHAR},
      </if>
      <if test="teacherSex != null">
        teacher_sex = #{teacherSex,jdbcType=VARCHAR},
      </if>
      <if test="teacherStatus != null">
        teacher_status = #{teacherStatus,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=VARCHAR},
      </if>
    </set>
    where teacher_id = #{teacherId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lms.po.Teacher">
    update teacher
    set department_id = #{departmentId,jdbcType=INTEGER},
      teacher_name = #{teacherName,jdbcType=VARCHAR},
      teacher_no = #{teacherNo,jdbcType=VARCHAR},
      teacher_password = #{teacherPassword,jdbcType=VARCHAR},
      teacher_sex = #{teacherSex,jdbcType=VARCHAR},
      teacher_status = #{teacherStatus,jdbcType=VARCHAR},
      role_id = #{roleId,jdbcType=VARCHAR}
    where teacher_id = #{teacherId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.lms.po.Teacher">
    <constructor>
      <idArg column="teacher_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="department_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="teacher_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="teacher_no" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="teacher_password" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="teacher_sex" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="teacher_status" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="role_id" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    teacher_id, department_id, teacher_name, teacher_no, teacher_password, teacher_sex, 
    teacher_status, role_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from teacher
    where teacher_id = #{teacherId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from teacher
    where teacher_id = #{teacherId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lms.po.Teacher">
    insert into teacher (teacher_id, department_id, teacher_name, 
      teacher_no, teacher_password, teacher_sex, 
      teacher_status, role_id)
    values (#{teacherId,jdbcType=INTEGER}, #{departmentId,jdbcType=INTEGER}, #{teacherName,jdbcType=VARCHAR}, 
      #{teacherNo,jdbcType=VARCHAR}, #{teacherPassword,jdbcType=VARCHAR}, #{teacherSex,jdbcType=VARCHAR}, 
      #{teacherStatus,jdbcType=VARCHAR}, #{roleId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.lms.po.Teacher">
    insert into teacher
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="teacherId != null">
        teacher_id,
      </if>
      <if test="departmentId != null">
        department_id,
      </if>
      <if test="teacherName != null">
        teacher_name,
      </if>
      <if test="teacherNo != null">
        teacher_no,
      </if>
      <if test="teacherPassword != null">
        teacher_password,
      </if>
      <if test="teacherSex != null">
        teacher_sex,
      </if>
      <if test="teacherStatus != null">
        teacher_status,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="teacherId != null">
        #{teacherId,jdbcType=INTEGER},
      </if>
      <if test="departmentId != null">
        #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="teacherName != null">
        #{teacherName,jdbcType=VARCHAR},
      </if>
      <if test="teacherNo != null">
        #{teacherNo,jdbcType=VARCHAR},
      </if>
      <if test="teacherPassword != null">
        #{teacherPassword,jdbcType=VARCHAR},
      </if>
      <if test="teacherSex != null">
        #{teacherSex,jdbcType=VARCHAR},
      </if>
      <if test="teacherStatus != null">
        #{teacherStatus,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lms.po.Teacher">
    update teacher
    <set>
      <if test="departmentId != null">
        department_id = #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="teacherName != null">
        teacher_name = #{teacherName,jdbcType=VARCHAR},
      </if>
      <if test="teacherNo != null">
        teacher_no = #{teacherNo,jdbcType=VARCHAR},
      </if>
      <if test="teacherPassword != null">
        teacher_password = #{teacherPassword,jdbcType=VARCHAR},
      </if>
      <if test="teacherSex != null">
        teacher_sex = #{teacherSex,jdbcType=VARCHAR},
      </if>
      <if test="teacherStatus != null">
        teacher_status = #{teacherStatus,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=VARCHAR},
      </if>
    </set>
    where teacher_id = #{teacherId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lms.po.Teacher">
    update teacher
    set department_id = #{departmentId,jdbcType=INTEGER},
      teacher_name = #{teacherName,jdbcType=VARCHAR},
      teacher_no = #{teacherNo,jdbcType=VARCHAR},
      teacher_password = #{teacherPassword,jdbcType=VARCHAR},
      teacher_sex = #{teacherSex,jdbcType=VARCHAR},
      teacher_status = #{teacherStatus,jdbcType=VARCHAR},
      role_id = #{roleId,jdbcType=VARCHAR}
    where teacher_id = #{teacherId,jdbcType=INTEGER}
  </update>
</mapper>