<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lms.dao.EvaluationTypeDao">
  <resultMap id="BaseResultMap" type="com.lms.po.EvaluationType">
    <constructor>
      <idArg column="evaluation_type_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="role_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="status" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    evaluation_type_id, role_id, status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from evaluation_type
    where evaluation_type_id = #{evaluationTypeId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from evaluation_type
    where evaluation_type_id = #{evaluationTypeId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lms.po.EvaluationType">
    insert into evaluation_type (evaluation_type_id, role_id, status
      )
    values (#{evaluationTypeId,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lms.po.EvaluationType">
    insert into evaluation_type
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="evaluationTypeId != null">
        evaluation_type_id,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="evaluationTypeId != null">
        #{evaluationTypeId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lms.po.EvaluationType">
    update evaluation_type
    <set>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where evaluation_type_id = #{evaluationTypeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lms.po.EvaluationType">
    update evaluation_type
    set role_id = #{roleId,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER}
    where evaluation_type_id = #{evaluationTypeId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.lms.po.EvaluationType">
    <constructor>
      <idArg column="evaluation_type_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="role_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="status" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    evaluation_type_id, role_id, status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from evaluation_type
    where evaluation_type_id = #{evaluationTypeId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from evaluation_type
    where evaluation_type_id = #{evaluationTypeId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyProperty="evaluationTypeId" parameterType="com.lms.po.EvaluationType">
    insert into evaluation_type (role_id, status
      )
    values (#{roleId,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lms.po.EvaluationType">
    insert into evaluation_type
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="evaluationTypeId != null">
        evaluation_type_id,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="evaluationTypeId != null">
        #{evaluationTypeId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective"  parameterType="com.lms.po.EvaluationType">
    update evaluation_type
    <set>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where evaluation_type_id = #{evaluationTypeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lms.po.EvaluationType">
    update evaluation_type
    set role_id = #{roleId,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER}
    where evaluation_type_id = #{evaluationTypeId,jdbcType=INTEGER}
  </update>

  <select id="findAllByRoleId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from evaluation_type
    where role_id = #{roleId,jdbcType=INTEGER}
  </select>
  <select id="findAll" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from evaluation_type
  </select>
</mapper>