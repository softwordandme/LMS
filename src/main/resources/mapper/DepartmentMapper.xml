<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lms.dao.DepartmentDao">
  <resultMap id="BaseResultMap" type="com.lms.po.Department">
    <constructor>
      <idArg column="department_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="department_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="parent_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="teacher_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    department_id, department_name, parent_id, teacher_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from department
    where department_id = #{departmentId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from department
    where department_id = #{departmentId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyProperty="departmentId" parameterType="com.lms.po.Department">
    insert into department (department_id, department_name, parent_id, 
      teacher_id)
    values (#{departmentId,jdbcType=INTEGER}, #{departmentName,jdbcType=VARCHAR}, #{parentId,jdbcType=INTEGER}, 
      #{teacherId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.lms.po.Department">
    insert into department
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="departmentId != null">
        department_id,
      </if>
      <if test="departmentName != null">
        department_name,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="teacherId != null">
        teacher_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="departmentId != null">
        #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="departmentName != null">
        #{departmentName,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="teacherId != null">
        #{teacherId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lms.po.Department">
    update department
    <set>
      <if test="departmentName != null">
        department_name = #{departmentName,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="teacherId != null">
        teacher_id = #{teacherId,jdbcType=INTEGER},
      </if>
    </set>
    where department_id = #{departmentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lms.po.Department">
    update department
    set department_name = #{departmentName,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=INTEGER},
      teacher_id = #{teacherId,jdbcType=INTEGER}
    where department_id = #{departmentId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.lms.po.Department">
    <constructor>
      <idArg column="department_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="department_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="parent_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="teacher_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    department_id, department_name, parent_id, teacher_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from department
    where department_id = #{departmentId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from department
    where department_id = #{departmentId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lms.po.Department">
    insert into department (department_id, department_name, parent_id, 
      teacher_id)
    values (#{departmentId,jdbcType=INTEGER}, #{departmentName,jdbcType=VARCHAR}, #{parentId,jdbcType=INTEGER}, 
      #{teacherId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.lms.po.Department">
    insert into department
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="departmentId != null">
        department_id,
      </if>
      <if test="departmentName != null">
        department_name,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="teacherId != null">
        teacher_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="departmentId != null">
        #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="departmentName != null">
        #{departmentName,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="teacherId != null">
        #{teacherId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lms.po.Department">
    update department
    <set>
      <if test="departmentName != null">
        department_name = #{departmentName,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="teacherId != null">
        teacher_id = #{teacherId,jdbcType=INTEGER},
      </if>
    </set>
    where department_id = #{departmentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lms.po.Department">
    update department
    set department_name = #{departmentName,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=INTEGER},
      teacher_id = #{teacherId,jdbcType=INTEGER}
    where department_id = #{departmentId,jdbcType=INTEGER}
  </update>

  <select id="findAll" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from department
  </select>

  <delete id="deleteDepartmentsByParentId" parameterType="java.lang.Integer">
    delete from department
    where parent_id = #{parentId,jdbcType=INTEGER}
  </delete>
</mapper>