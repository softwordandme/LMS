<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lms.dao.ClazzDao">
  <resultMap id="BaseResultMap" type="com.lms.po.Clazz">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="clazz_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="clazz_num" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="course_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="course_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="department" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="teacher_no" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, clazz_name, clazz_num, course_id, course_name, department, teacher_no
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from clazz
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from clazz
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lms.po.Clazz">
    insert into clazz (id, clazz_name, clazz_num, 
      course_id, course_name, department, 
      teacher_no)
    values (#{id,jdbcType=INTEGER}, #{clazzName,jdbcType=VARCHAR}, #{clazzNum,jdbcType=INTEGER}, 
      #{courseId,jdbcType=INTEGER}, #{courseName,jdbcType=VARCHAR}, #{department,jdbcType=INTEGER}, 
      #{teacherNo,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.lms.po.Clazz">
    insert into clazz
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="clazzName != null">
        clazz_name,
      </if>
      <if test="clazzNum != null">
        clazz_num,
      </if>
      <if test="courseId != null">
        course_id,
      </if>
      <if test="courseName != null">
        course_name,
      </if>
      <if test="department != null">
        department,
      </if>
      <if test="teacherNo != null">
        teacher_no,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="clazzName != null">
        #{clazzName,jdbcType=VARCHAR},
      </if>
      <if test="clazzNum != null">
        #{clazzNum,jdbcType=INTEGER},
      </if>
      <if test="courseId != null">
        #{courseId,jdbcType=INTEGER},
      </if>
      <if test="courseName != null">
        #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="department != null">
        #{department,jdbcType=INTEGER},
      </if>
      <if test="teacherNo != null">
        #{teacherNo,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lms.po.Clazz">
    update clazz
    <set>
      <if test="clazzName != null">
        clazz_name = #{clazzName,jdbcType=VARCHAR},
      </if>
      <if test="clazzNum != null">
        clazz_num = #{clazzNum,jdbcType=INTEGER},
      </if>
      <if test="courseId != null">
        course_id = #{courseId,jdbcType=INTEGER},
      </if>
      <if test="courseName != null">
        course_name = #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="department != null">
        department = #{department,jdbcType=INTEGER},
      </if>
      <if test="teacherNo != null">
        teacher_no = #{teacherNo,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lms.po.Clazz">
    update clazz
    set clazz_name = #{clazzName,jdbcType=VARCHAR},
      clazz_num = #{clazzNum,jdbcType=INTEGER},
      course_id = #{courseId,jdbcType=INTEGER},
      course_name = #{courseName,jdbcType=VARCHAR},
      department = #{department,jdbcType=INTEGER},
      teacher_no = #{teacherNo,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.lms.po.Clazz">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="clazz_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="clazz_num" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="course_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="course_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="department" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="teacher_no" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, clazz_name, clazz_num, course_id, course_name, department, teacher_no
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from clazz
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from clazz
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lms.po.Clazz">
    insert into clazz (id, clazz_name, clazz_num, 
      course_id, course_name, department, 
      teacher_no)
    values (#{id,jdbcType=INTEGER}, #{clazzName,jdbcType=VARCHAR}, #{clazzNum,jdbcType=INTEGER}, 
      #{courseId,jdbcType=INTEGER}, #{courseName,jdbcType=VARCHAR}, #{department,jdbcType=INTEGER}, 
      #{teacherNo,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.lms.po.Clazz">
    insert into clazz
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="clazzName != null">
        clazz_name,
      </if>
      <if test="clazzNum != null">
        clazz_num,
      </if>
      <if test="courseId != null">
        course_id,
      </if>
      <if test="courseName != null">
        course_name,
      </if>
      <if test="department != null">
        department,
      </if>
      <if test="teacherNo != null">
        teacher_no,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="clazzName != null">
        #{clazzName,jdbcType=VARCHAR},
      </if>
      <if test="clazzNum != null">
        #{clazzNum,jdbcType=INTEGER},
      </if>
      <if test="courseId != null">
        #{courseId,jdbcType=INTEGER},
      </if>
      <if test="courseName != null">
        #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="department != null">
        #{department,jdbcType=INTEGER},
      </if>
      <if test="teacherNo != null">
        #{teacherNo,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lms.po.Clazz">
    update clazz
    <set>
      <if test="clazzName != null">
        clazz_name = #{clazzName,jdbcType=VARCHAR},
      </if>
      <if test="clazzNum != null">
        clazz_num = #{clazzNum,jdbcType=INTEGER},
      </if>
      <if test="courseId != null">
        course_id = #{courseId,jdbcType=INTEGER},
      </if>
      <if test="courseName != null">
        course_name = #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="department != null">
        department = #{department,jdbcType=INTEGER},
      </if>
      <if test="teacherNo != null">
        teacher_no = #{teacherNo,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lms.po.Clazz">
    update clazz
    set clazz_name = #{clazzName,jdbcType=VARCHAR},
      clazz_num = #{clazzNum,jdbcType=INTEGER},
      course_id = #{courseId,jdbcType=INTEGER},
      course_name = #{courseName,jdbcType=VARCHAR},
      department = #{department,jdbcType=INTEGER},
      teacher_no = #{teacherNo,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="findAllByClazzNum" parameterType="com.lms.po.Clazz" resultMap="BaseResultMap">
    select * from clazz where clazz_num= #{clazzNum,jdbcType=INTEGER}
  </select>

  <select id="findClazzAllByClazzNum" parameterType="com.lms.po.Clazz" resultMap="BaseResultMap">
    select * from clazz where clazz_num= #{clazzNum,jdbcType=INTEGER}
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from clazz
    where clazz_num = #{clazzNum,jdbcType=INTEGER} AND course_id =#{courseId,jdbcType=INTEGER}
  </select>

  <select id="findClazzesByCourseId" parameterType="com.lms.po.Clazz" resultMap="BaseResultMap">
    select * from clazz where course_id =#{courseId,jdbcType=INTEGER}
  </select>

  <delete id="deleteAllByCourseId" parameterType="java.lang.Integer" >
    delete from clazz
    where course_id =#{courseId,jdbcType=INTEGER}
  </delete>

  <select id="findFirstByClazzNum" parameterType="com.lms.po.Clazz" resultMap="BaseResultMap">
    select * from clazz where clazz_num= #{clazzNum,jdbcType=INTEGER} limit 1,1
  </select>

  <select id="findClazzs" resultType="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    distinct clazz_num from clazz
  </select>

  <select id="findDistinctClazzNum" resultType="java.lang.Integer">
    select distinct clazz_num from clazz
  </select>

  <delete id="deleteClazzesByCourseId" parameterType="java.lang.Integer" >
    delete from clazz
    where course_id =#{courseId,jdbcType=INTEGER}
  </delete>
</mapper>